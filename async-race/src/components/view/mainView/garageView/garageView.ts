import ElementCreation from '../../util/element-creation';
import { IGetDataCar, IParams } from '../../../interfaces/interfaces';
import {
  blockRemoveParams,
  blockSelectParams,
  blockTextParams,
  buttonsNextGarageParams,
  buttonsPrevGarageParams,
  carImageParams,
  carLineParams,
  carStartParams,
  carStopParams,
  controlBlockParams,
  controlCarParams,
  garageButtonsParams,
  garageCarsParams,
  garageCurrentParams,
  garageTitleParams,
  lineControlParams,
  lineFinishParams,
} from '../../util/params';

import './garageView.scss';

export default class GarageView {
  public garage: ElementCreation;

  private garageTitle: ElementCreation = new ElementCreation(garageTitleParams);

  private garageCurrent: ElementCreation = new ElementCreation(garageCurrentParams);

  private garageCars: ElementCreation = new ElementCreation(garageCarsParams);

  private garageButtons: ElementCreation = new ElementCreation(garageButtonsParams);

  constructor(param: IParams) {
    this.garage = new ElementCreation(param);
    this.createElements();
  }

  public getElement(): ElementCreation | null {
    if (this.garage) {
      return this.garage;
    }
    return null;
  }

  public createElements(): void {
    this.createButtons();

    this.garage
      .getElement()
      ?.append(
        this.garageTitle.getElement()!,
        this.garageCurrent.getElement()!,
        this.garageCars.getElement()!,
        this.garageButtons.getElement()!,
      );
  }

  public updateText(count: number, current: number): void {
    document.querySelector('.garage__title')!.textContent = `Garage (${count})`;
    document.querySelector('.garage__current-page')!.textContent = `Page #${current}`;
  }

  private createButtons(): void {
    const next = new ElementCreation(buttonsNextGarageParams);
    const prev = new ElementCreation(buttonsPrevGarageParams);

    this.garageButtons.getElement()?.append(prev.getElement()!, next.getElement()!);
  }

  public createLineCar(car: IGetDataCar): void {
    const garage = document.querySelector('.garage__cars') as HTMLElement;
    const line = new ElementCreation(carLineParams);
    const control = new ElementCreation(lineControlParams);
    const finish = new ElementCreation(lineFinishParams);
    const controlBlock = new ElementCreation(controlBlockParams);
    const controlCar = new ElementCreation(controlCarParams);
    const select = new ElementCreation(blockSelectParams);
    const remove = new ElementCreation(blockRemoveParams);
    const text = new ElementCreation(blockTextParams);
    const start = new ElementCreation(carStartParams);
    const stop = new ElementCreation(carStopParams);
    const image = new ElementCreation(carImageParams);

    line.getElement()!.setAttribute('data-id', `${car.id}`);
    remove.getElement()!.setAttribute('data-id', `${car.id}`);
    select.getElement()!.setAttribute('data-id', `${car.id}`);
    text.getElement()!.textContent = `${car.name}`;
    image.getElement()!.innerHTML = this.setImageCar(car.color);
    image.getElement()!.setAttribute('data-color', `${car.color}`);
    finish.getElement()!.innerHTML = this.setImageFinish();

    controlCar.getElement()!.append(start.getElement()!, stop.getElement()!, image.getElement()!);
    controlBlock
      .getElement()!
      .append(select.getElement()!, remove.getElement()!, text.getElement()!);
    control.getElement()!.append(controlBlock.getElement()!, controlCar.getElement()!);
    line.getElement()!.append(control.getElement()!, finish.getElement()!);

    garage.append(line.getElement()!);
  }

  public setImageCar(color: string): string {
    return `<svg viewBox="0 0 1280.000000 640.000000">
    <g transform="translate(0.000000,640.000000) scale(0.100000,-0.100000)" class="image__svg" fill="${color}" stroke="none">
      <path d="M3565 5336 c-106 -30 -101 -26 -108 -111 -4 -42 -9 -80 -12 -85 -6 -10 -246 -105 -590 -234 -448 -167 -1052 -415 -1173 -483 -78 -43 -193 -91 -250 -104 -23 -5 -98 -14 -165 -19 -67 -6 -167 -19 -222 -30 -154 -31 -340 -49 -563 -57 l-203 -6 -43 -66 c-59 -91 -60 -95 -26 -130 37 -37 38 -65 3 -150 -25 -62 -27 -78 -31 -256 l-4 -190 -38 -32 c-91 -78 -133 -209 -134 -418 0 -194 11 -396 26 -482 13 -71 14 -74 72 -122 69 -58 130 -129 158 -184 64 -126 534 -211 1384 -250 l92 -4 -6 119 c-6 142 8 256 49 383 112 352 394 622 756 722 90 26 112 28 278 28 165 0 188 -2 278 -27 201 -56 361 -152 504 -302 140 -145 222 -293 274 -492 21 -79 24 -109 23 -279 -1 -127 -6 -214 -16 -263 l-15 -73 3006 7 c1653 4 3007 8 3009 9 1 1 -8 37 -20 81 -19 67 -22 105 -22 259 -1 166 1 187 27 279 117 421 467 736 885 797 119 17 325 7 432 -21 239 -63 453 -205 601 -399 70 -92 154 -267 185 -386 24 -88 27 -119 27 -260 1 -116 -4 -181 -16 -234 -10 -41 -16 -75 -15 -76 2 -1 62 2 133 6 266 16 458 45 525 79 48 24 97 81 127 146 l24 52 -16 157 c-15 152 -15 163 4 284 63 388 50 680 -35 802 -134 193 -526 336 -1429 519 -737 149 -1322 209 -2033 210 -228 0 -226 0 -347 85 -187 131 -1045 607 -1471 815 -383 187 -788 281 -1439 332 -208 17 -1106 16 -1400 0 -121 -7 -314 -19 -430 -27 -302 -22 -286 -22 -341 10 -140 81 -187 94 -269 71z m1885 -333 c6 -37 38 -238 71 -446 32 -209 66 -422 75 -474 9 -52 15 -96 13 -97 -11 -9 -1699 29 -1951 44 -206 13 -417 36 -485 54 -98 26 -198 119 -249 231 -35 75 -36 172 -5 255 17 45 30 61 68 86 83 54 135 80 253 127 341 136 858 230 1460 267 269 16 270 16 511 18 l227 2 12 -67z m630 47 c264 -18 777 -110 1029 -186 186 -56 445 -188 756 -387 211 -134 274 -181 250 -185 -75 -12 -133 -50 -162 -106 -19 -35 -21 -136 -4 -179 l11 -27 -907 2 -906 3 -59 160 c-110 302 -298 878 -298 916 0 6 95 2 290 -11z"/>
      <path d="M2633 3125 c-223 -40 -410 -141 -568 -306 -132 -138 -213 -283 -262 -467 -22 -83 -26 -119 -26 -247 -1 -169 10 -236 65 -382 87 -230 271 -436 493 -551 85 -44 178 -78 271 -98 107 -23 312 -23 419 1 392 84 699 375 802 761 23 86 26 120 27 254 1 158 -5 199 -46 330 -98 310 -355 567 -668 669 -150 50 -354 64 -507 36z m350 -301 c249 -56 457 -247 543 -499 25 -72 28 -95 28 -220 1 -153 -15 -228 -74 -345 -94 -186 -283 -337 -485 -386 -96 -24 -268 -24 -360 0 -320 84 -544 355 -562 681 -20 359 209 673 558 765 94 24 253 26 352 4z"/>
      <path d="M2600 2697 c-36 -13 -85 -36 -109 -51 l-44 -28 116 -115 c81 -82 120 -114 131 -110 14 6 16 29 16 167 0 186 6 178 -110 137z"/>
      <path d="M2920 2561 c0 -139 2 -162 16 -168 11 -4 50 28 130 108 l115 114 -28 22 c-34 28 -138 70 -193 79 l-40 7 0 -162z"/>
      <path d="M2282 2448 c-28 -36 -92 -191 -92 -225 0 -10 34 -13 165 -13 151 0 165 1 165 18 0 15 -206 232 -221 232 -4 0 -11 -6 -17 -12z"/>
      <path d="M3222 2351 c-62 -59 -112 -115 -112 -124 0 -15 17 -17 165 -17 131 0 165 3 165 13 0 40 -69 205 -95 227 -7 6 -48 -27 -123 -99z"/>
      <path d="M2781 2332 c-12 -22 11 -62 34 -62 8 0 21 10 29 22 20 28 4 58 -29 58 -13 0 -29 -8 -34 -18z"/>
      <path d="M2749 2161 c-32 -33 -37 -67 -14 -110 29 -57 104 -64 151 -14 53 57 9 153 -71 153 -27 0 -44 -8 -66 -29z"/>
      <path d="M2570 2125 c-26 -32 13 -81 48 -59 24 16 27 45 6 61 -23 17 -39 16 -54 -2z"/>
      <path d="M3006 2124 c-20 -19 -20 -38 -2 -54 23 -19 61 -8 64 18 7 44 -32 67 -62 36z"/>
      <path d="M2190 1975 c0 -29 41 -140 72 -194 l31 -53 117 117 c71 71 116 123 113 131 -4 11 -40 14 -169 14 -141 0 -164 -2 -164 -15z"/>
      <path d="M3110 1972 c0 -9 51 -68 114 -131 l114 -114 31 54 c30 51 71 165 71 195 0 11 -31 14 -165 14 -151 0 -165 -1 -165 -18z"/>
      <path d="M2780 1901 c-7 -15 -5 -24 8 -41 32 -40 85 -4 62 41 -14 25 -56 25 -70 0z"/>
      <path d="M2562 1697 c-61 -62 -112 -115 -112 -119 0 -18 208 -108 249 -108 7 0 11 54 11 164 0 140 -2 165 -16 170 -9 3 -16 6 -17 6 -1 0 -53 -51 -115 -113z"/>
      <path d="M2933 1803 c-15 -6 -19 -333 -4 -333 46 0 251 88 251 108 0 9 -223 232 -230 231 -3 0 -11 -3 -17 -6z"/>
      <path d="M10700 3119 c-390 -84 -696 -376 -797 -759 -31 -117 -41 -292 -24 -411 33 -227 150 -453 318 -609 267 -250 643 -344 993 -249 117 32 283 118 380 196 487 396 518 1128 67 1560 -97 93 -166 140 -290 198 -137 64 -235 86 -407 91 -120 3 -162 0 -240 -17z m445 -313 c238 -81 409 -258 486 -506 30 -96 33 -289 5 -388 -110 -400 -513 -637 -911 -536 -149 38 -313 147 -402 267 -176 238 -203 533 -71 797 34 69 60 103 138 180 77 78 111 104 181 139 129 65 207 81 364 77 109 -3 143 -7 210 -30z"/>
      <path d="M10703 2700 c-54 -19 -153 -71 -153 -80 0 -3 51 -57 114 -119 80 -80 119 -112 130 -108 14 5 16 29 16 167 l0 160 -27 -1 c-16 0 -52 -9 -80 -19z"/>
      <path d="M11020 2561 c0 -139 2 -162 16 -168 22 -8 247 216 234 232 -17 20 -163 84 -207 91 l-43 7 0 -162z"/>
      <path d="M10366 2424 c-29 -44 -76 -165 -76 -194 0 -19 7 -20 165 -20 126 0 165 3 165 13 0 7 -51 63 -114 126 l-114 114 -26 -39z"/>
      <path d="M11313 2348 c-61 -62 -109 -119 -106 -125 6 -15 333 -19 333 -4 0 45 -88 241 -108 241 -4 0 -57 -51 -119 -112z"/>
      <path d="M10882 2338 c-17 -17 -15 -32 7 -52 16 -14 23 -15 41 -6 31 17 24 64 -10 68 -14 2 -31 -3 -38 -10z"/>
      <path d="M10846 2159 c-68 -81 17 -194 110 -144 89 48 56 175 -46 175 -30 0 -44 -6 -64 -31z"/>
      <path d="M10670 2126 c-19 -23 -8 -61 18 -64 44 -7 67 32 36 62 -19 20 -38 20 -54 2z"/>
      <path d="M11106 2127 c-21 -16 -18 -45 7 -61 37 -23 77 35 41 61 -10 7 -21 13 -24 13 -3 0 -14 -6 -24 -13z"/>
      <path d="M10290 1970 c0 -29 43 -141 74 -195 l28 -48 116 116 c81 81 113 120 109 131 -6 14 -29 16 -167 16 -152 0 -160 -1 -160 -20z"/>
      <path d="M11207 1978 c-3 -7 47 -66 111 -130 l116 -118 27 43 c27 44 79 177 79 203 0 12 -28 14 -164 14 -122 0 -166 -3 -169 -12z"/>
      <path d="M10881 1901 c-14 -25 -5 -48 20 -56 27 -9 51 13 47 44 -4 34 -51 43 -67 12z"/>
      <path d="M10662 1697 c-61 -62 -112 -115 -112 -119 0 -20 201 -108 247 -108 10 0 13 34 13 164 0 140 -2 165 -16 170 -9 3 -16 6 -17 6 -1 0 -53 -51 -115 -113z"/>
      <path d="M11033 1803 c-10 -3 -13 -47 -13 -169 0 -90 4 -164 8 -164 36 0 186 61 239 98 16 10 -216 242 -234 235z"/>
    </g>
  </svg>`;
  }

  private setImageFinish(): string {
    return `<svg viewBox="0 0 1280.000000 1136.000000">
    <g transform="translate(0.000000,1136.000000) scale(0.100000,-0.100000)" fill="#000000" stroke="none">
      <path d="M5805 11350 c-233 -24 -496 -100 -710 -205 -367 -181 -673 -455 -1415 -1270 -544 -597 -875 -908 -1195 -1120 -382 -255 -778 -369 -1165 -336 -328 28 -648 116 -1010 279 -241 108 -310 131 -310 103 0 -42 629 -1428 2108 -4645 l409 -890 154 -82 c526 -282 754 -333 1429 -321 326 6 361 12 571 98 509 209 806 455 1579 1309 456 503 732 777 1008 997 327 263 642 419 972 485 95 18 148 22 300 22 211 0 349 -17 559 -70 267 -66 447 -136 731 -280 l166 -84 199 -432 c109 -238 317 -692 463 -1008 1442 -3138 1767 -3838 1794 -3867 12 -12 30 -25 40 -29 34 -10 318 71 318 92 0 17 -546 1219 -1178 2589 -192 418 -522 1134 -732 1590 -210 457 -433 940 -495 1075 -98 214 -293 634 -975 2105 -87 187 -344 743 -573 1235 -608 1311 -1141 2449 -1165 2487 -6 10 -23 10 -72 2 -148 -23 -250 -74 -250 -126 0 -24 -3 -25 -37 -21 -21 3 -114 38 -206 77 -93 39 -213 87 -267 106 -128 44 -356 100 -490 120 -128 19 -433 27 -555 15z m430 -65 c493 -85 908 -229 1062 -370 109 -99 170 -203 356 -611 184 -403 198 -444 145 -429 -13 4 -81 36 -153 71 -302 148 -731 249 -1102 261 l-192 6 -147 326 c-156 346 -270 612 -298 699 -27 82 -22 86 87 79 50 -3 160 -18 242 -32z m-1543 -552 c47 -56 170 -301 383 -763 60 -129 110 -237 112 -239 1 -2 22 9 45 24 374 248 829 444 1030 445 53 0 59 -2 82 -33 55 -72 359 -724 425 -912 48 -135 49 -133 -94 -171 -348 -91 -506 -160 -807 -353 -148 -95 -170 -103 -192 -69 -9 14 -84 173 -167 354 -190 415 -315 674 -326 674 -15 0 -120 -85 -222 -180 -56 -52 -195 -194 -309 -315 -252 -266 -391 -405 -408 -405 -7 0 -22 15 -33 33 -46 75 -350 737 -400 870 -12 32 -21 81 -21 111 0 48 5 60 44 113 143 189 785 833 832 833 6 0 18 -8 26 -17z m2520 -1619 c302 -42 648 -140 918 -261 80 -36 166 -74 192 -85 l46 -20 162 -351 c166 -360 302 -663 315 -705 9 -31 10 -31 -225 68 -389 164 -615 221 -1045 261 -121 12 -221 22 -221 23 -5 4 -257 553 -324 706 -72 161 -140 330 -140 346 0 3 15 11 33 19 43 19 151 19 289 -1z m-4388 -332 c14 -27 93 -197 176 -378 200 -435 282 -604 290 -604 4 0 26 13 50 29 90 60 260 224 515 496 144 154 289 304 321 334 54 50 59 52 72 35 21 -28 77 -142 202 -409 143 -305 262 -543 287 -574 l20 -24 48 44 c26 24 141 143 254 263 221 236 429 433 554 527 43 33 82 59 86 59 9 0 49 -82 201 -410 136 -295 257 -545 290 -598 l20 -33 33 17 c17 9 88 53 157 98 279 180 502 272 814 336 54 11 106 20 115 20 19 0 70 -100 266 -525 134 -291 195 -445 202 -510 7 -71 -16 -90 -126 -99 -176 -14 -483 -145 -781 -331 -123 -77 -173 -105 -188 -105 -10 0 -113 220 -349 744 -79 176 -145 322 -148 324 -9 10 -205 -158 -336 -288 -74 -74 -183 -193 -241 -265 -108 -134 -337 -365 -361 -365 -19 0 -101 151 -219 403 -143 308 -281 587 -294 598 -20 17 -119 -76 -392 -369 -324 -347 -533 -545 -560 -528 -11 7 -167 332 -345 721 -138 302 -143 310 -173 313 -23 2 -65 -18 -189 -93 -88 -54 -204 -119 -258 -147 -203 -101 -452 -190 -572 -204 -82 -9 -99 -19 -91 -55 8 -44 93 -249 214 -519 123 -275 202 -477 202 -514 0 -40 -32 -49 -155 -48 -278 3 -849 152 -1133 296 -118 60 -145 86 -218 208 -158 266 -408 785 -438 912 -7 28 -7 28 31 21 21 -3 132 -44 248 -90 382 -153 641 -215 997 -240 110 -8 163 -2 172 21 11 29 -91 270 -339 802 -64 139 -116 255 -114 257 2 2 95 26 206 54 302 76 390 109 563 216 192 118 373 225 381 225 5 0 20 -22 33 -48z m5556 -1897 c210 -33 467 -107 708 -204 149 -60 242 -111 277 -153 55 -65 444 -889 462 -978 l5 -30 -38 14 c-22 8 -104 41 -183 75 -167 71 -317 121 -485 161 -189 46 -314 62 -549 69 l-218 6 -234 510 c-129 280 -235 515 -235 521 0 26 56 34 220 30 91 -2 212 -12 270 -21z m-4536 -317 c34 -63 238 -505 376 -818 40 -91 74 -167 76 -169 7 -8 182 148 305 272 73 72 247 255 386 405 140 149 256 272 259 272 7 0 92 -176 258 -534 185 -397 248 -526 257 -526 3 0 112 114 242 253 312 335 516 530 655 626 65 45 54 63 303 -484 125 -275 228 -505 228 -510 1 -6 -91 -95 -203 -198 -112 -103 -271 -258 -353 -344 -292 -311 -371 -387 -386 -375 -22 18 -171 316 -332 662 -80 173 -150 319 -154 323 -5 5 -137 -131 -294 -301 -422 -457 -608 -625 -655 -595 -23 14 -95 153 -278 538 -171 359 -231 475 -245 475 -5 0 -92 -51 -192 -114 -284 -177 -391 -226 -660 -302 -187 -53 -267 -82 -267 -95 0 -16 73 -183 245 -559 184 -402 227 -501 221 -507 -12 -12 -159 -14 -281 -4 -348 30 -570 93 -1040 296 -99 42 -185 82 -191 89 -11 10 -94 187 -327 696 -123 271 -168 373 -163 377 2 3 80 -27 173 -65 429 -179 599 -232 858 -268 123 -17 437 -25 451 -11 10 10 -10 57 -221 522 -101 220 -196 433 -213 472 l-31 73 27 14 c15 8 70 23 122 34 250 54 518 170 770 332 122 78 183 109 217 110 17 0 30 -15 57 -62z m1008 -2185 c19 -43 128 -279 242 -524 113 -245 206 -451 206 -456 0 -9 -197 -133 -370 -233 -189 -110 -469 -223 -617 -250 -144 -26 -198 27 -335 324 -84 182 -241 545 -274 632 -13 35 -21 70 -18 78 7 18 56 36 100 36 157 0 553 169 849 363 88 58 165 106 171 106 6 1 26 -34 46 -76z"/>
    </g>
  </svg>`;
  }
}
